// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                      String    @id @default(uuid())
  name                    String
  priceInCents            Int
  filePath                String
  imagePath               String
  description             String
  isAvailableForPurchase  Boolean   @default(true)
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  categoryId              String?   
  category                Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  orders                  Order[]
  downloadVerifications   DownloadVerification[]
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String
  products    Product[]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id               String   @id @default(uuid())
  pricePaidInCents Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  userId           String
  productId        String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product          Product  @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model DownloadVerification {
  id         String   @id @default(uuid())
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  productId  String
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
